// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// SlowStartConfigApplyConfiguration represents a declarative configuration of the SlowStartConfig type for use
// with apply.
type SlowStartConfigApplyConfiguration struct {
	Window           *v1.Duration `json:"window,omitempty"`
	Aggression       *string      `json:"aggression,omitempty"`
	MinWeightPercent *uint32      `json:"minWeightPercent,omitempty"`
}

// SlowStartConfigApplyConfiguration constructs a declarative configuration of the SlowStartConfig type for use with
// apply.
func SlowStartConfig() *SlowStartConfigApplyConfiguration {
	return &SlowStartConfigApplyConfiguration{}
}

// WithWindow sets the Window field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Window field is set to the value of the last call.
func (b *SlowStartConfigApplyConfiguration) WithWindow(value v1.Duration) *SlowStartConfigApplyConfiguration {
	b.Window = &value
	return b
}

// WithAggression sets the Aggression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Aggression field is set to the value of the last call.
func (b *SlowStartConfigApplyConfiguration) WithAggression(value string) *SlowStartConfigApplyConfiguration {
	b.Aggression = &value
	return b
}

// WithMinWeightPercent sets the MinWeightPercent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MinWeightPercent field is set to the value of the last call.
func (b *SlowStartConfigApplyConfiguration) WithMinWeightPercent(value uint32) *SlowStartConfigApplyConfiguration {
	b.MinWeightPercent = &value
	return b
}
